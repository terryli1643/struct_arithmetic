package sort

/*
首先，我们将数组中的数据分为两个区间，已排序区间和未排序区间。
初始已排序区间只有一个元素，就是数组的第一个元素。
插入算法的核心思想是取未排序区间中的元素，在已排序区间中找到合适的插入位置将其插入，并保证已排序区间数据一直有序。
重复这个过程，直到未排序区间中元素为空，算法结束。

最好时间复杂度为:O(n)
最坏时间复杂度为：O(n²)
平均时间复杂度为：O(n²)
*/
func InsertionSort(a []int) {
	n := len(a)
	for i := 1; i < n; i++ {
		for j := i - 1; j > 0; j-- {
			if a[j+1] < a[j] {
				a[j+1], a[j] = a[j], a[j+1]
			} else {
				break
			}
		}
	}
}
